#!/bin/bash
echo '{ "version": { "revision": "N/A", "message": "The in script version message says Hello World" }, "metadata": [{ "name": "message", "value": "The in script metadata message says Hello World." }] }'
set -eu
exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

echo "Echo says hi from the out script!" >&2

source=$1

if [[ -z "$source" ]]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

export TMPDIR=${TMPDIR:-/tmp/in}
mkdir -p "${TMPDIR}"

payload=$(mktemp "$TMPDIR/resource-request.XXXXXX")
cat > "$payload" <&0

# greeting=$(jq -r '.params.greeting // ""' < "$payload")
# params=$(jq -r '.params' < "$payload")
source=$(jq -r '.source' < "$payload")
source_region=$(jq -r '.source.region' < "$payload")
params=$(jq -r '.params' < "$payload")
param_region=$(jq -r '.params.region' < "$payload")
# echo "Param greeting says: $greeting" >&2
echo "Param greeting says: $params" >&2
echo "Param region says: $param_region" >&2
echo "source says: $source" >&2
echo "source region says: $source_region" >&2

aws --version
echo $source_region 
export final_region=$source_region
export $final_region
aws configure set default.region $source_region
# aws configure get default.region
aws configure set default.region $param_region
# aws configure get default.region
resource_types:
- name: helloworld
  type: docker-image
  source:
    repository: surendharselvakumar/helloworld
    # set repo of your helloworld resource
    # or use my helloworld resource
    # repository: thehandsomezebra/concourse-resourcetype-helloworld

resources:
- name: helloworld
  type: helloworld
  check_every: 1s
  source:
    aws_access_key: "test_aws_access_key"  
    aws_secret_key: "test_aws_secret_key"
    region        : ((region))        
  
- name: repo
  type: git
  check_every: 1s
  source:
    uri: https://github.com/SurenPonnusamy/helloworld-concourse
    branch: main
    private_key: ((private_key))
  
# - name: docker-resource-type
  # type: registry-image
  # source: 
    # repository: docker.io/surendharselvakumar/helloworld
    # username: surendharselvakumar
    # password: Suren2302%
    # tag: latest  

jobs:      
# - name: build-docker-image
  # plan:
  # - get: repo
    # trigger: true  
  # - task: build-docker-resource-type
    # privileged: true
    # params:
      # DOCKERFILE: Dockerfile
    # config: 
      # platform: linux
      # image_resource:
        # type: registry-image
        # source:
          # repository: concourse/oci-build-task
      # inputs:
      # - name: repo
        # path: .
      # outputs:
      # - name: image
      # run:
        # path: build
  # - put: docker-resource-type
    # params:
      # image: image/image.tar  
      
- name: hello-job
  plan:
  - get: repo
    trigger: true  
    # passed: [build-docker-image]       
  - get: helloworld    
    trigger: false        
  - task: input-type
    params:
      region: ((region))
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: docker.io/surendharselvakumar/helloworld
      inputs:      
      - name: repo
      run:
        path: sh        
        args: 
        - -cx
        - |
          env
          aws --version
          ls -lasrt /opt/
          # aws configure set default.region ((region))
          # aws configure get default.region